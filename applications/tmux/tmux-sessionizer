#!/usr/bin/env bash

set -e

function usage() {
    cat <<EOF
"Usage: $0 [options] [command]"
    -a:                 show all repos
    -w:                 show only work repos
    -p:                 show only personal repos
    -u:                 show only university repos
    -s /path/to/repo:   select specific repo
    -h:                 show this help
EOF
    exit 1
}

function list_repos() {
    local -r base_path="$1"

    find "$base_path" -type d -name '.git' -prune -exec dirname {} \;
}

while getopts "awpucs:h" opt; do
    case $opt in
    a)
        selected=$(list_repos "$REPOS" | fzf)
        ;;
    w)
        selected=$(list_repos "$REPOS"/work | fzf)
        ;;
    p)
        selected=$(list_repos "$REPOS"/personal | fzf)
        ;;
    u)
        selected=$(list_repos "$REPOS"/unitn | fzf)
        ;;
    c)
        selected=$(list_repos "$REPOS"/ctf | fzf)
        ;;
    s)
        selected=$OPTARG
        ;;
    h | *)
        usage
        ;;
    esac
done
if [ "$OPTIND" -eq 1 ]; then
    usage
fi

if [[ -e "$selected/.tmuxp.yaml" ]]; then
    tmuxp load -y "$selected/.tmuxp.yaml"
else
    selected_name=$(basename "$selected" | tr . _)
    tmux_running=$(pgrep tmux)

    if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
        tmux new-session -s "$selected_name" -c "$selected"
        exit 0
    fi

    if ! tmux has-session -t="$selected_name" 2>/dev/null; then
        tmux new-session -ds "$selected_name" -c "$selected"
    fi

    tmux switch-client -t "$selected_name"
fi
